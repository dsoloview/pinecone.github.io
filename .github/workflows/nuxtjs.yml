# Workflow for building and deploying a Nuxt site to GitHub Pages using pnpm
name: Deploy Nuxt site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and the latest queued
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Setup Node.js and pnpm
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Use Node.js v20
          cache: "pnpm"      # Cache dependencies for pnpm

      - name: Install pnpm & enable corepack
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      # Step 3: Setup Pages (specific for Nuxt configuration)
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # Automatically inject router.base into Nuxt configuration file for GitHub Pages compatibility.
          static_site_generator: nuxt

      # Step 4: Restore the cache for build artifacts (optional)
      - name: Restore build cache
        uses: actions/cache@v4
        with:
          path: |
            dist
            .nuxt
            node_modules
          key: ${{ runner.os }}-pnpm-nuxt-cache-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-nuxt-cache-

      # Step 5: Install dependencies via pnpm
      - name: Install dependencies
        run: pnpm install

      # Step 6: Generate static files for Nuxt
      - name: Static site generation with Nuxt
        run: pnpm generate

      # Step 7: Upload the generated static files as an artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Deploy the artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
